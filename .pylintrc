# .pylintrc
[MESSAGES CONTROL]

# Disable messages that might be too strict or less relevant for this project's scope.
# Add more message IDs here if Pylint becomes too noisy after initial runs.
# Examples (uncomment or add as needed):
disable=
    # C0103: invalid-name (sometimes allows short var names like 'e' in except)
    # R0903: too-few-public-methods (often okay for simple classes/scripts)
    # R0913: too-many-arguments (can happen in network handlers)
    # C0301: line-too-long (uncomment if you want to allow > 100 chars)
    # C0114: missing-module-docstring (optional for scripts)
    # C0115: missing-class-docstring (if you add classes later)

# Enable messages important for the rubric (docstrings)
# By default, Pylint usually has these enabled but might score them low.
# Explicitly enabling ensures they're considered.
enable=
    C0116, # missing-function-docstring (or missing-method-docstring)
    # W0611, # unused-import (Good practice)
    # W0612, # unused-variable (Good practice)


[REPORTS]

# Score threshold below which Pylint will exit with an error code.
# Set this reasonably high to enforce quality but allow minor issues.
# 8.0 is a good starting point. Raise to 9.0 or 9.5 for stricter checks.
score=yes # Ensure score is calculated and reported

[BASIC]

# Check for missing docstrings on functions and methods.
no-docstring-rgx=^_$ # Don't require docstrings for methods starting with _ (internal)

# Regular expression for variable names allowed (default is fine for PEP8)
# variable-rgx=...

[FORMAT]

# Enforce PEP8 line length (default is 100, PEP8 standard is 79, 100 is common)
max-line-length=100

# Expected indentation (default is 4 spaces)
indent-string='    '